ASSUME SS:SSEG, CS:CSEG, DS:DSEG

DSEG SEGMENT 
BUF DB 8
	DB ?
	DB 8 DUP(?)
FACSUM DW ?
INPUTMIN DW ?
INPUTMAX DW ?
SUM DW ?
I1 DW ?
TMP DW ?
STR DB 8
	DB ?
	DB 8 DUP(?)
NUM DW ?  
MIN DB "Start At :",'$'
MAX DB "End At :",'$'
PART1 DD 12345678h
PART2 DD 12355678h
RESULT DW ?
DSEG ENDS

SSEG SEGMENT STACK
	DW 64 DUP(?)
SSEG ENDS

CSEG SEGMENT 

ASCII2NUM PROC NEAR
	XOR CH, CH
	MOV CL, BUF[1]
	XOR DX, DX 
	MOV SI, 0
LOOP1:
	PUSH CX
	MOV  AX, DX 
	MOV  CL, 3
	SHL  DX, CL 
	SHL  AX, 1
	ADD  DX, AX 
	XOR  AH, AH 
	MOV  AL, BUF[SI+2]
	INC  SI 
	SUB  AL, '0'
	ADD  DX, AX  
	POP  CX 
	LOOP LOOP1 
	MOV  AX, DX 
	RET
ASCII2NUM ENDP

FILTER:
	PUSH BP
	MOV BP,SP
	SUB SP,08H

	MOV AX,DI
	SHR AX,1
	MOV TMP,DI
	MOV WORD PTR SUM,01H
	MOV WORD PTR I1,00H
	JMP LOOPEXIT
LOOP2:
	MOV AX,TMP
	XOR DX,DX
	DIV WORD PTR SUM
	MOV AX,DX
	TEST AX,AX
	JNZ FORADD
	MOV AX,SUM
	ADD I1,AX
FORADD:
	ADD WORD PTR SUM,1

LOOPEXIT: 
	MOV AX,SUM
	CMP AX,TMP
	JB  LOOP2

	MOV AX,I1
	MOV SP,BP
	POP BP
	RET

START:    
	MOV AX,DSEG
	MOV DS,AX 
	MOV AX,SSEG
	MOV SS,AX
	MOV SP,20H
	MOV BP,SP
	SUB SP,10H

	MOV DX,OFFSET MIN
	MOV AH,09H
	INT 21H

	LEA  DX, BUF 
	MOV  AH, 0AH
	INT  21H
	CALL ASCII2NUM
	MOV INPUTMIN,AX

	MOV	AH, 2
	MOV DL, 13
	INT 21H
	MOV DL, 10
	INT 21H

	MOV DX,OFFSET MAX
	MOV AH,09H
	INT 21H

	LEA  DX, BUF 
	MOV  AH, 0AH
	INT  21H
	CALL ASCII2NUM
	MOV INPUTMAX,AX

	MOV CX,0DCH
	JMP FORIF

LOOP0:
	CMP CX,0
	JZ  EXIT
	MOV AX,CX
	MOV DI,AX
	CALL FILTER
	MOV FACSUM,AX

	MOV AX,INPUTMIN
	CMP FACSUM,AX
	JB  FORADD1
	MOV AX,INPUTMAX
	CMP FACSUM,AX
	JA 	FORADD1

	MOV AX,FACSUM
	MOV DI,AX
	CALL FILTER
	CMP CX,AX
	JNZ FORADD1
	CMP CX,FACSUM
	JNB FORADD1

	MOV	AH, 2
	MOV DL, 13
	INT 21H
	MOV DL, 10
	INT 21H

	PUSH CX
	MOV AX,CX
	CALL PRINT
	POP CX

	MOV	AH, 2
	MOV DL, '-'
	INT 21H
	
	PUSH CX
	MOV AX,FACSUM
	CALL PRINT
	POP CX

FORADD1:
	INC CX
FORIF:
	MOV AX,INPUTMAX
	CMP CX,AX
	JBE LOOP0

EXIT:    
	MOV AX, 4C00H
	INT 21H

PRINT PROC NEAR
	PUSH BP
	MOV BP,SP

	MOV DI,OFFSET STR
	CMP AX,0
	JZ ZERO

	MOV BX,10
	XOR CX,CX

N3:	XOR DX,DX
	DIV BX
	PUSH DX
	INC CX
	CMP AX,0
	JZ RE
	JMP N3

ZERO:
	MOV BYTE PTR [DI],'0'
	INC DI
	MOV BYTE PTR [DI],'$'
	JMP FI					

RE:
	POP AX
	ADD AL,30H
	MOV [DI],AL
	INC DI
	LOOP RE
	MOV BYTE PTR [DI],'$'

FI:	MOV DX,OFFSET STR
	MOV AH,09H
	INT 21H

	MOV SP,BP
	POP BP
	RET
PRINT ENDP

CSEG ENDS
END START